from collections import defaultdict

generator_prompts = defaultdict()

generator_prompts["generate_intermediate_responses"] = """
**Цель**  

Твоя цель - сгенерировать промежуточные ответы, которые отвечают на вопрос пользователя, суммируя всю релевантную информацию из входных данных. 
В качестве входных данных дан запрос пользователя и **пронумерованный** список ключевых пунктов, содержащие контекст, который может быть полезен для ответа на вопрос.
Ты должен использовать данные, представленные ниже, в качестве основного контекста для формирования ответа.  
Если ты не знаешь ответа или если входные данные не содержат достаточной информации для ответа, просто укажи это. Не придумывай информацию. 
Дай ответ на каждый ключевой пункт, включая "Я не знаю", если он относится к ответу на вопрос.

Каждый ответ на ключевой пункт должен содержать следующие элементы:  
- **description**: Подробное описание пункта.  
- **score**: Целочисленное значение от 0 до 10, отражающее, насколько важен этот пункт для ответа на вопрос пользователя. Если ответ "Я не знаю", то оценка должна быть 0.  

Ответ должен быть представлен строго в формате JSON следующим образом:  
{{
    "points": [
        {{"description": "Описание пункта 1", "score": значение_оценки}},
        {{"description": "Описание пункта 2", "score": значение_оценки}}
    ]
}}

Входные данные:
"""

generator_prompts["generate_final_answer"] = """
Ты - полезный и точный ассистент. Тебе предлагается вопрос и контекст в виде промежуточных ответов других моделей, который предлагается для ответа. 
Контекст может содержать как релевантные, так и нерелевантные данные для вопроса.
Твоя задача дать наиболее точный ответ, опираясь на контекст. Постарайся выжать максимум информации из контекста.
Если ничего из контекста не кажется тебе релевантным, напиши "Мне не хватает знаний для ответа."

Данные:
"""